image: node:lts-alpine

variables:
  npm_config_cache: "$CI_PROJECT_DIR/.npm"
  CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"

default:
  interruptible: true
  cache:
    policy: pull-push
    unprotect: false
    untracked: false
    when: on_success
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .npm
      - cache/Cypress
      - backend/node_modules
      - frontend/node_modules

test-format:
  stage: test
  before_script:
    - cp ${ENV_TEST} .env
  script:
    - cd backend
    - npm install
    - npm run prettier:check
    - npm run lint
    - cd ../frontend
    - npm install
    - npm run prettier:check
    - npm run lint
  after_script:
    - rm .env

test-integration:
  stage: test
  variables:
    POSTGRES_DB: cnw-db
    POSTGRES_USER: cnw-user
    POSTGRES_PASSWORD: cnw-password
    POSTGRES_HOST_AUTH_METHOD: trust
    VITE_FRONTEND_ADDRESS: http://localhost:4173/
  image: cypress/base
  services:
    - postgres:latest
  before_script:
    - cp ${ENV_TEST} .env
    - apt-get update -qy && apt-get upgrade -qy
    - apt-get install -y postgresql-client
    - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f init.sql
  script:
    - cd backend
    - npm install
    - npm run test
    - npm run build
    - npm run start &
    - cd ../frontend
    - npm install
    - npm run build
    - npm run preview & sleep 5 && npm run test
  after_script:
    - rm .env
  artifacts:
    when: always
    paths:
      - cypress/screenshots/**/*.png
    expire_in: 1 day

deploy:
  stage: deploy
  environment:
    name: production
    url: https://clicknwash.pro
  only:
    - "main"
  tags:
    - server
  before_script:
    - cp ${ENV_PROD} .env
  script:
    - PORT=$(sudo cat .env | grep -oP '^PORT=\K[0-9]+')
    - if [ -z "$PORT" ]; then PORT=8080; fi
    - curl https://gist.githubusercontent.com/nicanderhery/4687d9f9d94590b77ea8c5227a23b3b6/raw/c4c481d4b6668d0601c2414807644c19a6c6f3e8/node-install-latest.sh > node-install-latest.sh
    - chmod +x node-install-latest.sh
    - NODE_VERSION=$(./node-install-latest.sh | grep -oP 'Now using node \Kv[0-9\.]+')
    - export PATH=$PATH:/home/ubuntu/.nvm/versions/node/$NODE_VERSION/bin
    - npm install -g pm2
    - sudo docker compose down && sudo docker compose up -d click-n-wash-db --build
    - cd backend
    - npm install
    - npm run build
    - npm run production
    - cd ../frontend
    - npm install
    - npm run build
    - cd ..
    - if [[ ! -x "./deploy.sh" ]]; then chmod +x ./deploy.sh; fi
    - ./deploy.sh -d clicknwash.pro -p $PORT
  after_script:
    - rm .env
